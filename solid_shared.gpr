with "../PragmARC/pragmarc";

project Solid is
   for Source_Files use
      ("solid.ads",
       "solid-calendar.ads",
       "solid-data_structures.ads",
       "solid-data_structures-hashed_multimaps.adb",
       "solid-debug.ads",
       "solid-debug-analyzer.adb",
       "solid-finalization.adb",
--       "solid-formats.ads",
--       "solid-formats-json.ads",
--       "solid-formats-json-generator.ads",
       "solid-interfaces.ads",
       "solid-interfaces-bitwise_enumerations.adb",
       "solid-interfaces-libraries.adb",
       "solid-interrupt_handling.adb",
       "solid-net.ads",
--       "solid-net-iax.ads",
       "solid-platform.ads",
       --"solid-platform-endian.adb",
       "solid-strings.ads",
       "solid-text_streams.adb");

   type Build_Type is ("Debug", "Release");
   Build : Build_Type := external ("LIBRARY_BUILD", "Debug");

   type Library_Kind_Type is ("relocatable", "static");
   Library_Type : Library_Kind_Type := external ("LIBRARY_TYPE", "relocatable");

   -----------------------
   -- Build directories --
   -----------------------

   for Exec_Dir use ".build";

   case Build is
      when "Debug" =>
         for Exec_Dir use Project'Exec_Dir & "/debug";
      when "Release" =>
         for Exec_Dir use Project'Exec_Dir & "/release";
   end case;

   case Library_Type is
      when "static" =>
         for Exec_Dir use Project'Exec_Dir & "/static";
      when "relocatable" =>
         for Exec_Dir use Project'Exec_Dir & "/relocatable";
   end case;

   for Object_Dir use Project'Exec_Dir & "/obj";
   for Library_Dir use Project'Exec_Dir & "/lib";

   for Library_Name use "solid";
   for Library_Kind use Library_Type;
   for Library_Options use ("-ldl");

   --------------
   -- Compiler --
   --------------

   Common_Options :=
      ("-gnat05", "-Wall", "-fstack-check");
   -- ("-gnat05", "-gnatwcfijkmruv", "-gnaty3abcefhiklmnoprstx", "-Wall");
   --  Common options used for the Debug and Release modes

   Debug_Options :=
     ("-g", "-gnato");
   -- ("-g", "-gnata", "-gnatVa", "-gnatQ", "-gnato", "-gnatwe");

   Release_Options :=
     ("-O2", "-gnatn");

   package Compiler is
      case Build is
         when "Release" =>
            for Default_Switches ("Ada") use Common_Options & Release_Options;
         when "Debug" =>
            for Default_Switches ("Ada") use Common_Options & Debug_Options;
      end case;
   end Compiler;

   ------------
   -- Binder --
   ------------

   package Binder is
      for Default_Switches ("Ada") use ("-E");
   end Binder;

   -------------
   -- Builder --
   -------------

   package Builder is
      for Default_Switches ("Ada") use ("-m", "-j2");
   end Builder;
end Solid;
